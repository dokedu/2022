<html>
<head>
    <style>
        p {
            margin: 0;
        }
    </style>
    <meta charset="UTF-8">
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body>
{{ range $entry := $.Entries }}
    <div class="entry entry-template"
         style="break-inside: avoid;font-family: 'sofia-pro', sans-serif;-webkit-box-sizing: border-box;box-sizing: border-box;font-size: 14px;color: #000000;border-bottom: 1px solid #c7c7c7;margin-bottom: 20px;break-inside: avoid">
        <div class="entry-content" style="font-family: 'sofia-pro', sans-serif;-webkit-box-sizing:
         border-box;box-sizing: border-box;font-size: 14px;color: #000000;display: flex;padding-bottom: 20px;page-break-inside: avoid !important;">
            <div class="date" style="font-family: 'sofia-pro', sans-serif;-webkit-box-sizing: border-box;box-sizing:
         border-box;font-size: 14px;color: #000000;width: 120px;max-width: 120px;min-width:
         120px;">
                {{ formatDate $entry.Date }}
            </div>
            <div class="content" style="font-family: 'sofia-pro', sans-serif;-webkit-box-sizing: border-box;box-sizing:
         border-box;font-size: 14px;color: #000000;-webkit-box-flex: 1;-ms-flex: 1;flex: 1;" id="{{ $entry.ID }}">

            </div>
            <div class="teacher" style="font-family: 'sofia-pro', sans-serif;-webkit-box-sizing: border-box;box-sizing:
         border-box;font-size: 14px;color: #000000;width: 150px;margin-left:
         20px;text-align: right">{{ $entry.Account.FirstName }} {{ $entry.Account.LastName }}
            </div>
        </div>
        <div class="tags mb-5 flex justify-end flex-wrap break-inside-avoid">
            {{ range $tag := $entry.Tags }}
                <div class="break-inside-avoid inline-flex items-center rounded-full bg-blue-100 py-0.5 pl-2.5 text-sm font-medium text-blue-700 pr-2.5 mr-1 mb-1">
                    <div class="max-w-[500px] line-clamp-1">
                        {{ $tag }}
                    </div>
                </div>
            {{ end }}
        </div>
        <div class="competences" style="font-family: 'sofia-pro', sans-serif;-webkit-box-sizing:
         border-box;box-sizing: border-box;font-size: 14px;color: #000000;margin-left: 20px;grid-area: competence;display:
         flex;-webkit-box-orient: vertical;-webkit-box-direction: normal;-ms-flex-direction: column;flex-direction:
         column;padding-bottom: 10px;break-inside: avoid">
            {{ range $competence := $entry.Competences }}

                <div class="competence
             competence-template"
                     style="break-inside: avoid !important;font-family: 'sofia-pro', sans-serif;-webkit-box-sizing: border-box;box-sizing: border-box;font-size: 14px;color: #000000;display: flex;-webkit-box-pack: justify;-ms-flex-pack: justify;justify-content: space-between;margin-bottom: 12px;padding-bottom: 12px;border-bottom: 1px solid #c7c7c7;border: none;">
                    <div class="name" style="font-family: 'sofia-pro', sans-serif;-webkit-box-sizing: border-box;box-sizing:
             border-box;font-size: 14px;color: #000000;break-inside: avoid">
                        {{ $competence.Name }}
                    </div>
                    <div class="level" style="page-break-inside: avoid !important;font-family: 'sofia-pro', sans-serif;-webkit-box-sizing: border-box;box-sizing:
             border-box;font-size: 14px;color: #000000;display: flex;-webkit-box-align: center;-ms-flex-align:
             center;align-items: center;justify-self: flex-end;margin-left:
             20px;">
                        {{if eq -1 $competence.Level}}
                            <svg style="margin-right: 28px;" xmlns="http://www.w3.org/2000/svg" width="24" height="24"
                                 viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
                                 stroke-linecap="round" stroke-linejoin="round"
                                 class="feather feather-calendar stroke-slate-900 w-[20px] h-[20px]">
                                <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
                                <line x1="16" y1="2" x2="16" y2="6"></line>
                                <line x1="8" y1="2" x2="8" y2="6"></line>
                                <line x1="3" y1="10" x2="21" y2="10"></line>
                            </svg>
                        {{ else }}
                            {{ range $level := iterate 3 }}
                                {{ if lt $level $competence.Level }}
                                    <div class="level_item active"
                                         style="page-break-inside: avoid !important;font-family: 'sofia-pro', sans-serif;-webkit-box-sizing: border-box;box-sizing: border-box;font-size: 14px;color: #000000;width: 20px;margin-right: 4px;border-radius: 100px;height: 4px;background-color: #000000;border: 1px solid black;"></div>
                                {{ else }}
                                    <div class="level_item" style="page-break-inside: avoid !important;font-family: 'sofia-pro', sans-serif;-webkit-box-sizing:
             border-box;box-sizing: border-box;font-size: 14px;color: #000000;width: 20px;margin-right: 4px;border-radius:
             100px;height: 4px;background-color: none;border: 1px solid
             black;"></div>
                                {{ end }}
                            {{ end }}
                        {{ end }}
                    </div>
                </div>
            {{end}}
        </div>
    </div>
{{end}}
<script type="module">
    import {generateHTML} from 'https://cdn.skypack.dev/pin/@tiptap/core@v2.0.0-beta.176-uNeEniDlfkR2grCC9aat/mode=imports,min/optimized/@tiptap/core.js'
    import StarterKit from 'https://cdn.skypack.dev/pin/@tiptap/starter-kit@v2.0.0-beta.176-deWsxdR0tmQLGuEJ9fSj/mode=imports,min/optimized/@tiptap/starter-kit.js'

    export function setEntry(id, body) {
        document.getElementById(id).innerHTML = generateHTML(body, [StarterKit])
    }

    {{ range $entry := $.Entries }}
    setEntry({{ $entry.ID }}, JSON.parse({{ $entry.Body }} ))
    {{ end }}

    let done = document.createElement('div')
    done.id = 'done'
    document.body.appendChild(done)
</script>
</body>
</html>