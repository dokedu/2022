# GraphQL schema example
#
# https://gqlgen.com/getting-started/

scalar Time

type Organisation {
    id: ID!
    name: String!
    owner: User!
    createdAt: Time!

    users: UserConnection
}

enum UserRole {
    admin
    user
    guest
}

type User {
    id: ID!
    role: UserRole!
    name: String!
    email: String!
    createdAt: Time!

    tasks: TaskConnection
}

type Task {
    id: ID!
    name: String!
    description: String!
    user: User!
    createdAt: Time!
    deletedAt: Time
}

input SignInInput {
    email: String!
    password: String!
}

type SignInPayload {
    token: String!
}

input SignUpInput {
    name: String!
    email: String!
    password: String!
}

input CreateTaskInput {
    name: String!
    description: String!
}

input UpdateTaskInput {
    id: ID!
    name: String
    description: String
}

type PageInfo {
    hasNextPage: Boolean!
    hasPreviousPage: Boolean!
    startCursor: String
    endCursor: String
}

type UserEdge {
    cursor: String!
    node: User
}

type TaskEdge {
    cursor: String!
    node: Task
}

type UserConnection {
    edges: [UserEdge]
    pageInfo: PageInfo!
    totalCount: Int!
}

type TaskConnection {
    edges: [TaskEdge]
    pageInfo: PageInfo!
    totalCount: Int!
}

type Query {
    tasks(first: Int, after: String, last: Int, before: String): TaskConnection!
    users(first: Int, after: String, last: Int, before: String): UserConnection!
}


type Mutation {
    createTask(input: CreateTaskInput!): Task!
    updateTask(input: UpdateTaskInput!): Task!
    deleteTask(id: ID!): Task!
}
